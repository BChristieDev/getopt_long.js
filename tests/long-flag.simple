/**
 * @file       tests/long-flag.simple
 * @author     Brandon Christie <bchristie.dev@gmail.com>
 */

// @ts-check
'use strict';

/** @import { Option } from '../lib/getopt_long.cjs' */

const { constants,
        extern,
        getopt_long } = require('../lib/getopt_long.cjs');

const { no_argument } = constants;
const args = [ '', '', '--foo', 'bar' ];

/**
 * @param {number} argc
 * @param {string[]} argv
 */
function main(argc, argv)
{
    const foo = [ 0 ];
    /** @type {Option[]} */
    const longopts = [
        { name: 'foo', has_arg: no_argument, flag: foo, val: 1 }
    ];
    let opt;

    while ((opt = getopt_long(argc, argv, '', longopts, [ 0 ])) !== -1)
    {
        switch (opt)
        {
            case 0:
                if (extern.optarg !== undefined)
                    throw new Error(`optarg is '${extern.optarg}'. Expected 'undefined'.`);

                break;
            default:
                throw new Error('unreachable code');
        }
    }

    if (foo[0] !== 1)
        throw new Error(`flag 'foo' is '${foo[0]}'. Expected '1'.`);

    if (args[extern.optind] !== 'bar')
        throw new Error(`positional argument is '${argv[extern.optind]}'. Expected 'bar'.`);
}

main(args.length, args);
