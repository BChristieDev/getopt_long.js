#! /usr/bin/env node

/**
 * @file       examples/longopts
 * @author     Brandon Christie <bchristie.dev@gmail.com>
 */

// @ts-check
'use strict';

/** @import { Option } from 'getopt_long.js' */

import { constants,
         extern,
         getopt_long } from 'getopt_long.js';

const { no_argument,
        optional_argument,
        required_argument } = constants;

/**
 * @param {number} argc
 * @param {string[]} argv
 */
function main(argc, argv)
{
    const longoptind = [ 0 ];
    /** @type {Option[]} */
    const longopts = [
        { name: 'lettera', has_arg: no_argument,       flag: 0, val: 'a' },
        { name: 'letterb', has_arg: optional_argument, flag: 0, val: 'b' },
        { name: 'letterc', has_arg: required_argument, flag: 0, val: 'c' }
    ];
    let opt;

    while ((opt = getopt_long(argc, argv, '', longopts, longoptind)) !== -1)
    {
        switch (opt)
        {
            case 'a':
            case 'b':
            case 'c':
                console.log(`option ${opt} with optarg '${extern.optarg}'`);
                break;
            case '?':
                break;
            default:
                console.log(`?? getopt returned character code 0${opt.toString(8)} ??`);
                break;
        }
    }
}

main(process.argv.length, process.argv);
